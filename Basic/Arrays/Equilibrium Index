Problem-
Find equilibrium index of an array. An index is consisdered to be equilibrium index if sum of elements of the array to the left of that index is equal to the sum of elements to the right of it.
Conditions - return index in 0-based indexing as array is marked on the basis of 0 marking.
             element at equilibrium index is not consisdered in any of the sums of left and right.
             if there are multiple indices which satisfy the given condition, then return left most index i.e., if there are multiple indices i, j, k,... which are equilibrium indices, then return the minimum among them.\
             if no such index is present in the array, return -1.


Examples -
Input:  6
        1 2 2 9 3 2
Output: 3

Input: 4
       1 2 3 4
Output: -1

---------------------------------------------------------------------------------------------------------------------------------------------------------------------


import java.util.* ;
import java.io.*; 
public class Solution {

	public static int arrayEquilibriumIndex(int[] arr){  
		//Your code goes here
		int totSum = 0;
		for(int i = 0; i < arr.length; i++){
			totSum += arr[i];
		}
		int sumL = 0;
		for(int i = 0; i < arr.length; i++){
			 
			    totSum -= arr[i]; 
			    if(totSum == sumL)
					return i;
				  sumL += arr[i];
					
				} 
		
		return -1;
	}
}
