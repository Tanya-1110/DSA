Problem-

Rotate an array to the left by 'k' steps where is k is non-negative.

Examples -
Input - 4
        5 6 7 8
        3

Output - 8 5 6 7 

There are 2 approaches to solve. Mentioned below:
------------------------------------------------------------------------------------
Naive Approach - (Time - O(n^2), Space - O(1))

Intution - We rotate the array K times where in each iteration we rotate the array by 1.
Rotating the array once can be done by changing input[i] to input[i+1] and appending the first character to the end.

import java.util.Scanner;

class Solution {

    public static void main(String args[]) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt(); // number of elements
        int arr[] = new int[n];
        // Initializing array elements
        for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }

        int k = sc.nextInt(); // No. of times to rotate
        rotateArray(arr, n, k);
    }

    static void rotateArray(int arr[], int n, int k) {
        
        for (int i = 0; i < k; i++) {
            int temp = arr[0];
            for (int j = 0; j < n - 1; j++)
                arr[j] = arr[j + 1];
    
            arr[n - 1] = temp;
        }

        //printing array
        for (int i = 0; i < n; i++) {
            System.out.print(arr[i] + " ");
        }
    }

}
--------------------------------------------------------------------------------------------

Optimal Approach - (Time- O(n), Space - O(1))

Intution - Multiple in-place reversals is done. 3 times reversing is done (1st - 0 to k (steps) blocks, 2nd - k + 1 to n - 1 blocks and finally entire array is reversed to obtain rotated array).

import java.util.* ;
import java.io.*; 
class Solution {
	
	public static void main(String args[]) {
		// Write code here
    Scanner scn = new Scanner(System.in);
		int n = scn.nextInt();
		
		int[] arr = new int[n];
		for(int i = 0; i < n; i++){
			arr[i] = scn.nextInt();
		}
		int K = scn.nextInt();

		if(K < 0){
			K = K + arr.length;
		}

		else if(K > arr.length){
			K = K % arr.length;
		}

		rev(arr, 0, K-1);
		rev(arr, K, arr.length-1);
		rev(arr, 0, arr.length-1);
    
		  for(int i : arr){
            System.out.print(i+" ");
        }
	}

	public static void rev(int[] arr, int i, int j){
	
		while(i < j){
			int temp = arr[i];
			arr[i] = arr[j];
			arr[j] = temp;
			i++;
			j--;
		}
	}
}
