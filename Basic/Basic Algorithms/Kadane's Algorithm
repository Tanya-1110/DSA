Problem -
You are given an array of size n consiting of integers(both positive and negative). Find the sum of the subarray(including empty subarray) having maximum sum among all subarrays.
The sum of an empty subarray is 0.

A subarray is a contiguous segment of an array. It can be formed either by removing 0 or more integers from the beginning and 0 or more integers from the end of an array.

Example -

Input: 9
1 2 7 -4 3 2 -10 9 1
Output: 11

Input: 3
-3 -5 -6
Output: 0

There are ---- approaches to solve. Mentioned below.
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
NAive Approach - 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Optimal Approach - (Time - O(n), Space - O(1))

KADANE'S ALGORITHM

Intution - 

class Solution {
    public int maxSubArray(int[] nums) {
        int max = Integer.MIN_VALUE;
        int sum = 0;

        for(int i = 0; i < nums.length; i++){
            sum += nums[i];

            if(sum > max)
               max = sum;

            if(sum < 0) 
              sum = 0;  
        }

        return max;
    }
}

# Interviewer's Favorite problem 
- length of subarray
- elements of subarray
- start and last index of subarray
(Explained in copy)


