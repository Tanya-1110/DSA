Problem - 
For a given dimensional integer array of size(N X M), print it in spiral form.

Example -

Input: 4 4 
1 2 3 4 
5 6 7 8 
9 10 11 12 
13 14 15 16
Output: 1 2 3 4 8 12 16 15 14 13 9 5 6 7 11 10 

Input: 3 1
10
20
30
Output: 10 20 30 

There is 1 approach to solve. Mentioned below. 
-----------------------------------------------------------------------------------------------------------------------------------------------

Optimal Approach - (Time - O(n*m), Space - O(1))

Intution - Explained in Copy.

public class Solution {

	public static void spiralPrint(int matrix[][]){
		//Your code goes here

         // If there are no rows or no columns, then it is an array and there is no spiral traversal for it. So, return.
                if(matrix.length==0){
                      return;
                }

		int rows = matrix.length;
		int cols = matrix[0].length;
		int k, i = 0, j = 0;

		while(i < rows && j < cols){
			for(k = j; k < cols; k++){
				System.out.print(matrix[i][k] + " ");
			}
			i++;

			for(k = i; k < rows; k++){
				System.out.print(matrix[k][cols-1] + " ");
			}
			cols--;

			if(i < rows){
				for(k = cols - 1; k >= j; k--){
					System.out.print(matrix[rows-1][k] + " ");
				}
			}
			rows--;

			if(j < cols){
				for(k = rows-1; k >= i; k--){
					System.out.print(matrix[k][j] + " ");
				}
			}
                        j++;
		}
	}
}
