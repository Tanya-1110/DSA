Problem -
Return the minimum number of paranthesis either '(' or ')' to make the given string into the valid string of parantheses where every closing bracket will have an opening bracket.

Example - 

Input: )((()
Output: 3

Input: ((
Output: 2

There is 1 approache to solve. Mentioned below:
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Optimal Approach - (Time - O(n), Space - O(1))

Intution - Explained in copy.

import java.util.* ;
import java.io.*; 
public class Solution {
	public static int minimumParentheses(String pattern) {
		// Write your code here.
		char[] arr = pattern.toCharArray();

        int open = 0, close = 0;
		for(int i = 0; i < arr.length; i++){
			if(arr[i] == '('){
				open++;
			}else{
				if(open == 0){
					close++;
				}else{
					open--;
				}
			}
		}
		
		return open + close;
	}
}
